- old: |
    CollectionAssert.AllItemsAreUnique(actual);

  new: |
    actual.Should().OnlyHaveUniqueItems();

  old-message: |
    CollectionAssert.AllItemsAreUnique failed. Duplicate item found:<SomeProperty: 1, OtherProperty: item>.

  new-message: |
    Expected collection to only have unique items, but item SomeProperty: 1, OtherProperty: item is not unique.

- old: |
    CollectionAssert.AreEqual(expected, actual);

  new: |
    actual.Should().Equal(expected);

  old-message: |
    CollectionAssert.AreEqual failed. (Element at index 0 do not match.)

  new-message: |
    Expected collection to be equal to {SomeProperty: 1, OtherProperty: item}, but {SomeProperty: 1, OtherProperty: different} differs at index 0.

- old: |
    CollectionAssert.AreNotEqual(expected, actual);

  new: |
    actual.Should().NotEqual(expected);

  old-message: |
    CollectionAssert.AreNotEqual failed. (Both collection contain same elements.)

  new-message: |
    Did not expect collections {SomeProperty: 1, OtherProperty: item} and {SomeProperty: 1, OtherProperty: item} to be equal.

- old: |
    CollectionAssert.AreEquivalent(expected, actual);

  new: |
    actual.Should().BeEquivalentTo(expected);

  old-message: |
    CollectionAssert.AreEquivalent failed. The expected collection contains 1 occurrence(s) of <SomeProperty: 2, OtherProperty: other>. The actual collection contains 0 occurrence(s).

  new-message: |
    Expected collection {SomeProperty: 1, OtherProperty: item, SomeProperty: 2, OtherProperty: item} to be equivalent to {SomeProperty: 1, OtherProperty: item, SomeProperty: 2, OtherProperty: other}, but it misses {SomeProperty: 2, OtherProperty: other}.

- old: |
    CollectionAssert.AreNotEquivalent(expected, actual);

  new: |
    actual.Should().NotBeEquivalentTo(expected);

  old-message: |
    CollectionAssert.AreNotEquivalent failed. Both collections contain the same elements.

  new-message: |
    Expected collection {SomeProperty: 1, OtherProperty: item, SomeProperty: 2, OtherProperty: other} not be equivalent with collection {SomeProperty: 1, OtherProperty: item, SomeProperty: 2, OtherProperty: other}.

- old: |
    CollectionAssert.Contains(actual, expected);

  new: |
    actual.Should().Contain(expected);

  old-message: |
    CollectionAssert.Contains failed.

  new-message: |
    Expected collection {SomeProperty: 2, OtherProperty: other} to contain SomeProperty: 1, OtherProperty: item.

- old: |
    CollectionAssert.DoesNotContain(actual, expected);

  new: |
    actual.Should().NotContain(expected);

  old-message: |
    CollectionAssert.DoesNotContain failed.

  new-message: |
    Expected collection {SomeProperty: 1, OtherProperty: item} to not contain SomeProperty: 1, OtherProperty: item.

- old: |
    CollectionAssert.IsSubsetOf(actual, expectedSuperset);

  new: |
    actual.Should().BeSubsetOf(expectedSuperset);

  old-message: |
    CollectionAssert.IsSubsetOf failed.

  new-message: |
    Expected collection to be a subset of {SomeProperty: 1, OtherProperty: item}, but items {SomeProperty: 2, OtherProperty: other} are not part of the superset.

- old: |
    CollectionAssert.IsNotSubsetOf(actual, expectedSuperset);

  new: |
    actual.Should().NotBeSubsetOf(expectedSuperset);

  old-message: |
    CollectionAssert.IsNotSubsetOf failed.

  new-message: |
    Did not expect collection {SomeProperty: 1, OtherProperty: item} to be a subset of {SomeProperty: 1, OtherProperty: item}.

- old: |
    CollectionAssert.AllItemsAreNotNull(actual);

  new: |
    actual.Should().NotContainNulls();

  old-message: |
    CollectionAssert.AllItemsAreNotNull failed.

  new-message: |
    Expected collection not to contain nulls, but found one at index 0.

- old: |
    CollectionAssert.AllItemsAreInstancesOfType(actual, typeof(T));

  new: |
    actual.Should().ContainItemsAssignableTo<T>();

  old-message: |
    CollectionAssert.AllItemsAreInstancesOfType failed. Element at index 0 is not of expected type. Expected type:<UnitTests2.MyIdenticalClass>. Actual type:<UnitTests2.MyClass>.

  new-message: |
    Expected collection to contain only items of type UnitTests2.MyIdenticalClass, but item SomeProperty: 1, OtherProperty: item at index 0 is of type UnitTests2.MyClass.


