- old: |
    [ExpectedException(typeof(InvalidOperationException))]
    public void MyTest()
    {
        func();
    }

  new: |
    public void MyTest()
    {
        Action act = () => func();

        act.Should().ThrowExactly<InvalidOperationException>();
    }

  old-message: |
    Test method threw exception System.InvalidCastException, but exception System.ArgumentNullException was expected. Exception System.InvalidCastException: Specified cast is not valid.

  new-message: |
    Expected a <System.ArgumentNullException> to be thrown, but found a <System.InvalidCastException>: System.InvalidCastException with message "Specified cast is not valid."
         at UnitTests2.ExceptionTests.<>c.<Snippet01_New>b__1_0() in C:\Path\To\UnitTests\ExceptionTests.cs:line 31
         at UnitTests2.ExceptionTests.<>c__DisplayClass1_0.<Snippet01_New>b__1() in C:\Path\To\UnitTests\ExceptionTests.cs:line 34
         at FluentAssertions.Specialized.ActionAssertions
           .InvokeSubjectWithInterception()
    .

- old: |
    Action act = () => func();

    // MSTest V2
    Assert.ThrowsException<InvalidOperationException>(act);

  new: |
    Action act = () => func();

    act.Should().ThrowExactly<InvalidOperationException>();

  old-message: |
    Assert.ThrowsException failed. Threw exception InvalidCastException, but exception ArgumentNullException was expected.
    Exception Message: Specified cast is not valid.
    Stack Trace:    at UnitTests2.ExceptionTests.<>c.<Snippet01v2_Old>b__2_0() in C:\Path\To\UnitTests\ExceptionTests.cs:line 44
       at UnitTests2.ExceptionTests.<>c__DisplayClass2_0.<Snippet01v2_Old>b__1() in C:\Path\To\UnitTests\ExceptionTests.cs:line 47
       at Microsoft.VisualStudio.TestTools.UnitTesting.Assert
         .ThrowsException[T](Action action, String message, Object[] parameters)

  new-message: |
    Expected a <System.ArgumentNullException> to be thrown, but found a <System.InvalidCastException>: System.InvalidCastException with message "Specified cast is not valid."
         at UnitTests2.ExceptionTests.<>c.<Snippet01_New>b__1_0() in C:\Path\To\UnitTests\ExceptionTests.cs:line 31
         at UnitTests2.ExceptionTests.<>c__DisplayClass1_0.<Snippet01_New>b__1() in C:\Path\To\UnitTests\ExceptionTests.cs:line 34
         at FluentAssertions.Specialized.ActionAssertions
           .InvokeSubjectWithInterception()
    .

- old: |
    [ExpectedException(typeof(SystemException),
                       AllowDerivedTypes = true)]
    public void MyTest()
    {
        func();
    }

  new: |
    public void MyTest()
    {
        Action act = () => func();

        act.Should().Throw<InvalidOperationException>();
    }

  old-message: |
    Test method threw exception System.InvalidCastException, but exception System.ArgumentException or a type derived from it was expected. Exception System.InvalidCastException: Specified cast is not valid.

  new-message: |
    Expected a <System.ArgumentException> to be thrown, but found a <System.InvalidCastException>: System.InvalidCastException with message "Specified cast is not valid."
         at UnitTests2.ExceptionTests.<>c.<Snippet02_New>b__3_0() in C:\Path\To\UnitTests\ExceptionTests.cs:line 57
         at UnitTests2.ExceptionTests.<>c__DisplayClass3_0.<Snippet02_New>b__1() in C:\Path\To\UnitTests\ExceptionTests.cs:line 60
         at FluentAssertions.Specialized
            .ActionAssertions.InvokeSubjectWithInterception().

- old: |
    [ExpectedException(typeof(InvalidOperationException))]
    public void MyTest()
    {
        try
        {
            func();
        }
        catch (InvalidOperationException ex)
        {
            ex.Message.Should().Be(errorMessage);
            throw;
        }
    }

  new: |
    public void MyTest()
    {
        Action act = () => func();

        act.Should().ThrowExactly<InvalidOperationException>()
            .WithMessage(errorMessage);
    }

  old-message: |
    Expected string to be
    "expectedMessage" with a length of 15, but
    "actualMessage" has a length of 13.

  new-message: |
    Expected exception message to match the equivalent of
    "expectedMessage", but
    "actualMessage" does not.
